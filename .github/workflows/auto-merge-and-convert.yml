name: Auto Merge and Convert

on:
  pull_request:
    branches:
      - seasons-source

jobs:
  auto-merge-and-convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate Pull Request
        id: validate_pr
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "Checking PR #$PR_NUMBER"
          
          # Example validation: Check for specific patterns in PR title
          PR_TITLE=$(jq --raw-output .pull_request.title "$GITHUB_EVENT_PATH")
          if [[ "$PR_TITLE" != *"fix"* ]]; then
            echo "::error::Pull Request title must include 'fix'"
            echo "::set-output name=approved::false"
            exit 1
          fi

          echo "::set-output name=approved::true"

      - name: Merge Pull Request if Approved
        if: steps.validate_pr.outputs.approved == 'true'
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "Merging PR #$PR_NUMBER"

          # Merge the pull request using GitHub API
          curl -X PUT \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge \
            -d '{"merge_method":"squash"}'

      - name: Set up Python
        if: steps.validate_pr.outputs.approved == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: steps.validate_pr.outputs.approved == 'true'
        run: pip install -r requirements.txt

      - name: Convert Markdown to HTML
        if: steps.validate_pr.outputs.approved == 'true'
        run: |
          mkdir converted_html
          for file in season-*.md; do
            python convertor.py $file converted_html/$(basename ${file%.md}.html) $(basename ${file%.md})
          done

      - name: Checkout master branch
        if: steps.validate_pr.outputs.approved == 'true'
        uses: actions/checkout@v2
        with:
          ref: master
          persist-credentials: false

      - name: Copy converted files to master branch
        if: steps.validate_pr.outputs.approved == 'true'
        run: |
          cp -r converted_html/* seasons-html/
          git add seasons-html/
          git commit -m "Update HTML files"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
